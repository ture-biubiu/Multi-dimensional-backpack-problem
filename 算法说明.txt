Multidimensional knapsack problem（多维背包问题）


相比经典的01背包问题，多维背包问题在约束条件上增加了一个维度。传统的01背包问题只需满足一个限制条件（重量），即所有物品总重量不超过背包承重，所放入背包中物品价值和最大。多维背包则要求每个物品的每一个属性之和不超过对应的背包约束上限的情况下所得最大价值方案。

使用回溯法解决此问题
在算法的上界函数中，遍历所有物品的一种属性改成每次遍历一个物品的所有属性，即每一个物品必须同时满足所有的约束条件才能放入背包之中。回溯函数与01背包问题的回溯函数并无太大区别。

此方法是在01背包问题的回溯法的基础上增加了一个物品重量(属性)的维度改进而来，上届函数由原来的遍历物品改为遍历属性，故时间复杂度由O(n)变为O(m), 回溯函数每次需要遍历循环某个物品所有属性，时间复杂度也为O(m),最坏情况下有2^n个右儿子需要计算上届，所以总的时间复杂度为O(m^2*2^n)。

